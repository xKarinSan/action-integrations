name: CI/CD Pipeline
on: 
  workflow_call:
    secrets:
      AWS_ACCESS_KEY_ID:
        required: true
      AWS_SECRET_ACCESS_KEY:
        required: true
      AWS_DEFAULT_REGION:
        required: true
      LAMBDA_FUNCTION_NAME:
        required: true
      BUCKET_NAME:
        required: true
      DATABASE_NAME:
        required: true
      DATABASE_URL:
        required: true
jobs:
  backend-continuous-integration:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.x'
    - name: Install dependencies
      working-directory: ./backend
      run: |
        python -m pip install --upgrade pip
        pip install pipreqs 
        pipreqs --force
        pip install -r requirements.txt
    - name: Test with pytest
      working-directory: ./backend
      env:
        DATABASE_NAME:  ${{ secrets.DATABASE_NAME }}
        DATABASE_URL: ${{ secrets.DATABASE_URL }}
      run: |
        pip install pytest pytest-cov httpx
        pytest --doctest-modules --junitxml=junit/test-results.xml --cov=com --cov-report=xml --cov-report=html
    
    - name: Install dependencies & move the backend code inside the dependencies
      run: 
        pip3 install -t dependencies -r backend/requirements.txt |
        cp -a ./backend ./dependencies

    - name: Zip the dependencies
      run: |
        (cd dependencies; zip -r9 aws_lambda_artifact.zip -r .)


    - name: Upload zip file artifact
      uses: actions/upload-artifact@v3
      with:
        name: aws_lambda_artifact
        path: aws_lambda_artifact.zip
  
  backend-continuous-deployment:
    runs-on: ubuntu-latest
    needs: [backend-continuous-integration]
    steps:
      # Step 1
      - name: Install AWS CLI
        uses: unfor19/install-aws-cli-action@v1
        with:
          version: 1
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}
      # Step 2
      - name: Download aws_lambda_artifact.zip
        uses: actions/download-artifact@v3
        with:
          name: aws_lambda_artifact
      # Step 3
      - name: Upload to S3
        run: aws s3 cp aws_lambda_artifact.zip s3:// ${{ secrets.AWS_ACCESS_KEY_ID }}/aws_lambda_artifact.zip
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}
      # Step 4
      - name: Deploy new Lambda
        run: aws lambda update-function-code --function-name ${{ secrets.LAMBDA_FUNCTION_NAME }} --s3-bucket ${{ secrets.BUCKET_NAME }} --s3-key aws_lambda_artifact.zip
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}
